$date
  Sat Apr 03 19:57:39 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module four_bit_adder_tb $end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 4 # s[3:0] $end
$var reg 1 $ cin $end
$var reg 1 % cout $end
$scope module tb $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 1 ( cin $end
$var reg 4 ) sum[3:0] $end
$var reg 1 * cout $end
$var reg 3 + c[2:0] $end
$scope module fa0 $end
$var reg 1 , a $end
$var reg 1 - b $end
$var reg 1 . c $end
$var reg 1 / sum $end
$var reg 1 0 carry $end
$upscope $end
$scope module fa1 $end
$var reg 1 1 a $end
$var reg 1 2 b $end
$var reg 1 3 c $end
$var reg 1 4 sum $end
$var reg 1 5 carry $end
$upscope $end
$scope module fa2 $end
$var reg 1 6 a $end
$var reg 1 7 b $end
$var reg 1 8 c $end
$var reg 1 9 sum $end
$var reg 1 : carry $end
$upscope $end
$scope module fa3 $end
$var reg 1 ; a $end
$var reg 1 < b $end
$var reg 1 = c $end
$var reg 1 > sum $end
$var reg 1 ? carry $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b1010 !
b0111 "
b0001 #
0$
1%
b1010 &
b0111 '
0(
b0001 )
1*
b110 +
0,
1-
0.
1/
00
11
12
03
04
15
06
17
18
09
1:
1;
0<
1=
0>
1?
#20000000
b0001 !
b1001 #
1$
0%
b0001 &
1(
b1001 )
0*
b111 +
1,
1.
10
01
13
04
15
18
09
1:
0;
1=
1>
0?
#40000000
